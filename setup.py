"""
This is a setup.py script generated by py2applet

Usage:
    python setup.py py2app
"""

from setuptools import setup
import os

def read(fname):
    return open(os.path.join(os.path.dirname(__file__), fname)).read()

# import py2app
# from distutils.util import get_platform
# import sys,os,platform,shutil
# from setuptools import setup

# from BaseLib.__init__ import LIBRARYNAME

# # modules to include into bundle
# includeModules=["encodings.hex_codec","encodings.utf_8","encodings.latin_1","xml.sax", "email.iterators"]

# # ----- some basic checks

# if __debug__:
#     print ("WARNING: Non optimised python bytecode (.pyc) will be produced. Run with -OO instead to produce and bundle .pyo files.")

# if sys.platform != "darwin":
#     print ("WARNING: You do not seem to be running Mac OS/X.")

# # ----- import and verify wxPython

# import wxversion

# wxversion.select('2.8-unicode')

# import wx

# v = wx.__version__

# if v < "2.6":
#     print ("WARNING: You need wxPython 2.6 or higher but are using %s." % v)

# if v < "2.8.4.2":
#     print ("WARNING: wxPython before 2.8.4.2 could crash when loading non-present fonts. You are using %s." % v)

# # ----- import and verify M2Crypto

# import M2Crypto
# import M2Crypto.m2
# if "ec_init" not in M2Crypto.m2.__dict__:
#     print ("WARNING: Could not import specialistic M2Crypto (imported %s)" % M2Crypto.__file__)

# # ----- import VLC

# #import vlc

# #vlc = vlc.MediaControl(["--plugin-path",os.getcwd()+"/macbinaries/vlc_plugins"])

# # =================
# # build SwarmPlayer.app
# # =================

# from plistlib import Plist

# def includedir( srcpath, dstpath = None ):
#     """ Recursive directory listing, filtering out svn files. """

#     total = []

#     cwd = os.getcwd()
#     os.chdir( srcpath )

#     if dstpath is None:
#         dstpath = srcpath

#     for root,dirs,files in os.walk( "." ):
#         if '.svn' in dirs:
#             dirs.remove('.svn')

#         for f in files:
#             total.append( (root,f) )

#     os.chdir( cwd )

#     # format: (targetdir,[file])
#     # so for us, (dstpath/filedir,[srcpath/filedir/filename])
#     return [("%s/%s" % (dstpath,root),["%s/%s/%s" % (srcpath,root,f)]) for root,f in total]

# def filterincludes( l, f ):
#     """ Return includes which pass filter f. """

#     return [(x,y) for (x,y) in l if f(y[0])]

APP = ['main.py']
APP_NAME = "Bad Player"
DATA_FILES = [
    ('', ['config.yml',]),
    ('app/images/player/', ['app/images/player/animation.gif'])
]
OPTIONS = {
            'argv_emulation': True,
            'iconfile': 'app/images/icon.icns',
            'includes': ['sip','PyQt5']
            }

setup(
	name=APP_NAME,
    app=APP,
    data_files=DATA_FILES,
    options={'py2app': OPTIONS},
    setup_requires=['py2app', 'PyQt5', 'sqlalchemy', 'pyyaml', 'eyed3', 'youtube_dl'],
    # packages=['sqlalchemy', 'pyyaml', 'eyed3', 'youtube_dl'],
    # ressources=[includedir( "macbinaries/vlc_plugins" )],
    author = "Sebastien Treille",
    author_email = "c2ViYXN0aWVudHJlaWxsZUBnbWFpbC5jb20=",
    description = ("A bad player that play good playlists !"),
    long_description=read('README.md'),
    classifiers=[
        "Development Status :: 3 - Alpha",
        "Topic :: Utilities",
    ],
)
